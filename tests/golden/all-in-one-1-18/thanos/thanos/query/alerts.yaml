apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  annotations: {}
  labels:
    name: thanos-query-alerts
  name: thanos-query-alerts
  namespace: syn-thanos
spec:
  groups:
    - name: thanos-query.rules
      rules:
        - alert: ThanosQueryHttpRequestQueryErrorRateHigh
          annotations:
            description: Thanos Query {{$labels.job}} is failing to handle {{ $value
              | humanize }}% of "query" requests.
            summary: Thanos Query is failing to handle requests.
          expr: |
            (
              sum(rate(http_requests_total{code=~"5..", job=~"thanos-query.*", handler="query"}[5m]))
            /
              sum(rate(http_requests_total{job=~"thanos-query.*", handler="query"}[5m]))
            ) * 100 > 5
          for: 5m
          labels:
            severity: critical
            syn: 'true'
            syn_component: thanos
        - alert: ThanosQueryHttpRequestQueryRangeErrorRateHigh
          annotations:
            description: Thanos Query {{$labels.job}} is failing to handle {{ $value
              | humanize }}% of "query_range" requests.
            summary: Thanos Query is failing to handle requests.
          expr: |
            (
              sum(rate(http_requests_total{code=~"5..", job=~"thanos-query.*", handler="query_range"}[5m]))
            /
              sum(rate(http_requests_total{job=~"thanos-query.*", handler="query_range"}[5m]))
            ) * 100 > 5
          for: 5m
          labels:
            severity: critical
            syn: 'true'
            syn_component: thanos
        - alert: ThanosQueryInstantLatencyHigh
          annotations:
            description: Thanos Query {{$labels.job}} has a 99th percentile latency
              of {{ $value }} seconds for instant queries.
            summary: Thanos Query has high latency for queries.
          expr: |
            (
              histogram_quantile(0.99, sum by (job, le) (rate(http_request_duration_seconds_bucket{job=~"thanos-query.*", handler="query"}[5m]))) > 40
            and
              sum by (job) (rate(http_request_duration_seconds_bucket{job=~"thanos-query.*", handler="query"}[5m])) > 0
            )
          for: 10m
          labels:
            severity: critical
            syn: 'true'
            syn_component: thanos
        - alert: ThanosQueryRangeLatencyHigh
          annotations:
            description: Thanos Query {{$labels.job}} has a 99th percentile latency
              of {{ $value }} seconds for range queries.
            summary: Thanos Query has high latency for queries.
          expr: |
            (
              histogram_quantile(0.99, sum by (job, le) (rate(http_request_duration_seconds_bucket{job=~"thanos-query.*", handler="query_range"}[5m]))) > 90
            and
              sum by (job) (rate(http_request_duration_seconds_count{job=~"thanos-query.*", handler="query_range"}[5m])) > 0
            )
          for: 10m
          labels:
            severity: critical
            syn: 'true'
            syn_component: thanos
