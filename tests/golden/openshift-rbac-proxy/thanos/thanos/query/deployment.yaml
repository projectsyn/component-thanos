apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-layer
    app.kubernetes.io/instance: thanos-query
    app.kubernetes.io/name: thanos-query
    app.kubernetes.io/version: v0.18.0
  name: thanos-query
  namespace: syn-thanos
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: query-layer
      app.kubernetes.io/instance: thanos-query
      app.kubernetes.io/name: thanos-query
  template:
    metadata:
      labels:
        app.kubernetes.io/component: query-layer
        app.kubernetes.io/instance: thanos-query
        app.kubernetes.io/name: thanos-query
        app.kubernetes.io/version: v0.18.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - thanos-query
                namespaces:
                  - syn-thanos
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - query
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:9090
            - --log.level=info
            - --log.format=logfmt
            - --query.replica-label=prometheus_replica
            - --query.replica-label=rule_replica
            - --query.auto-downsampling
          env:
            - name: HOST_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: quay.io/thanos/thanos:v0.18.0
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            periodSeconds: 30
          name: thanos-query
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 9090
              name: http
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            periodSeconds: 5
          resources: {}
          terminationMessagePolicy: FallbackToLogsOnError
        - args:
            - --upstream=http://0.0.0.0:9090
            - --provider=openshift
            - --cookie-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
            - --openshift-service-account=thanos-query
            - --openshift-sar={"namespace":"syn-thanos","resource":"services","name":"thanos-auth","verb":"get"}
            - --http-address=http://:8080
            - --https-address=
          image: image-registry.openshift-image-registry.svc:5000/openshift/oauth-proxy:v4.4
          name: openshift-oauth-proxy
          ports:
            - containerPort: 8080
              name: proxy
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      serviceAccountName: thanos-query
      terminationGracePeriodSeconds: 120
